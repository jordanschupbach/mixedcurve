% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/benchmarks.r
\name{shift_and_rotate}
\alias{shift_and_rotate}
\title{Shift and rotate a function}
\usage{
shift_and_rotate(func, dom = c(0, 1), dim = 2)
}
\arguments{
\item{func}{A function that takes a numeric input and
returns a numeric output.}

\item{dom}{A numeric vector of length 2 specifying the
domain of the function (default is c(0, 1)).}

\item{dim}{An integer specifying the dimension of the space (default is 2).}
}
\value{
A new function that takes a numeric matrix as input and returns
        a numeric vector as output.
}
\description{
This function takes a 1D function and returns a new function that
is shifted and rotated in a multi-dimensional space.
}
\details{
The rotation is done around the center of the unit cube in
the specified dimension.
}
\examples{
# Define a simple 1D function
simple_func <- function(x) { sin(2 * pi * x) }

# Create a shifted and rotated version of the function in 2D
shifted_rotated_func <- mixedcurve::shift_and_rotate(simple_func, dim = 2)

# Evaluate the new function on a grid of points in 2D
neval <- 100
grid_points <- as.matrix(expand.grid(seq(0, 1, length.out = neval),
                                     seq(0, 1, length.out = neval)))
values <- shifted_rotated_func(grid_points)

# Plot the results
image(matrix(values, nrow = neval, ncol = neval),
      main = "Shifted and Rotated Function in 2D")
}
